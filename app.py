import streamlit as st
from moviepy.editor import *
import requests # ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏•‡∏≠‡∏á AI Modules (‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô API Call) ---
def analyze_trends():
    st.info("Trend Spotter AI: ‡∏û‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏•‡∏á 'Upbeat Folk' ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏∞‡πÅ‡∏™")
    # URL to a royalty-free music file
    music_url = "https://cdn.pixabay.com/download/audio/2022/08/04/audio_2dde641a22.mp3"
    r = requests.get(music_url)
    with open("trending_music.mp3", "wb") as f:
        f.write(r.content)
    return "trending_music.mp3"

def generate_script(topic):
    st.info(f"Scriptwriter AI: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ '{topic}'...")
    return [
        {"text": "‡∏ö‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πÑ‡∏£ ‡∏´‡∏ô‡∏±‡∏á‡∏ï‡∏≤‡∏Å‡πá‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ", "duration": 3, "keyword": "sleepy office"},
        {"text": "1. ‡∏•‡∏∏‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏¢‡∏∑‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏¢‡∏∑‡∏î‡∏™‡∏≤‡∏¢", "duration": 4, "keyword": "office stretching"},
        {"text": "2. ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÄ‡∏¢‡πá‡∏ô‡πÜ ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü", "duration": 4, "keyword": "drinking water"},
        {"text": "3. ‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏™‡∏ô‡∏∏‡∏Å‡πÜ ‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö", "duration": 3, "keyword": "listening music headphones"},
    ]

def find_visuals(script):
    st.info("Visual Scout AI: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ü‡∏∏‡∏ï‡πÄ‡∏ó‡∏à‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå...")
    video_urls = {
        "sleepy office": "https://cdn.pixabay.com/video/2020/09/11/50693-458999993.mp4",
        "office stretching": "https://cdn.pixabay.com/video/2022/06/13/118712-723689163.mp4",
        "drinking water": "https://cdn.pixabay.com/video/2019/11/04/28128-372505556.mp4",
        "listening music headphones": "https://cdn.pixabay.com/video/2023/06/21/167732-839070904.mp4",
    }
    clips = []
    for scene in script:
        url = video_urls[scene["keyword"]]
        r = requests.get(url, stream=True)
        filename = f"{scene['keyword'].replace(' ', '_')}.mp4"
        with open(filename, "wb") as f:
            for chunk in r.iter_content(chunk_size=1024):
                f.write(chunk)
        clips.append(VideoFileClip(filename).set_duration(scene["duration"]))
    return clips

def assemble_video(script, clips, music_file):
    st.info("Editor AI: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠...")
    final_clips = []
    for i, scene in enumerate(script):
        txt_clip = TextClip(scene["text"], fontsize=70, color='white', font='Arial-Bold',
                            stroke_color='black', stroke_width=2)
        txt_clip = txt_clip.set_pos('center').set_duration(scene["duration"])
        
        video_clip = clips[i].resize(height=1920).crop(x1=0, y1=0, width=1080, height=1920) # Resize to 9:16
        final_clips.append(CompositeVideoClip([video_clip, txt_clip]))

    final_video = concatenate_videoclips(final_clips)
    
    # Add music
    audioclip = AudioFileClip(music_file).set_duration(final_video.duration)
    final_video.audio = audioclip
    
    output_filename = "tiktok_final_video.mp4"
    final_video.write_videofile(output_filename, fps=24, codec="libx264", audio_codec="aac")
    return output_filename

# --- ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö UI ---
st.set_page_config(layout="wide")
st.title("üé¨ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á AI Content Creator for TikTok (Project ViralForge)")

topic = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á:", "3 ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡∏á‡πà‡∏ß‡∏á‡∏ï‡∏≠‡∏ô‡∏ö‡πà‡∏≤‡∏¢")

if st.button("üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ TikTok ‡∏î‡πâ‡∏ß‡∏¢ AI"):
    with st.spinner("AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô... ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 2-3 ‡∏ô‡∏≤‡∏ó‡∏µ"):
        # 1. Analyze Trends
        music_file = analyze_trends()
        # 2. Generate Script
        script = generate_script(topic)
        # 3. Find Visuals
        video_clips = find_visuals(script)
        # 4. Assemble Video (The core of the simulation)
        final_video_file = assemble_video(script, video_clips, music_file)
        
        st.success("üéâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!")
        
        video_file = open(final_video_file, 'rb')
        video_bytes = video_file.read()
        st.video(video_bytes)
        
        with open(final_video_file, "rb") as file:
            st.download_button(
                label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ (MP4)",
                data=file,
                file_name=final_video_file,
                mime="video/mp4"
            )
